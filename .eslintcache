[{"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\index.js":"1","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\styles\\ResponsiveStyles.js":"2","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Navbar.js":"3","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Detail\\TvDetail.js":"4","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\apis\\api.js":"5","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Detail\\Season.js":"6","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\fragment\\TvPrograms.js":"7","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\styles\\GlobalStyles.js":"8","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\Context\\ApiContext.js":"9","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Search.js":"10","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\TvProgram.js":"11","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Home.js":"12","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\MetaSctipt.js":"13","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\styles\\theme.js":"14","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Loader.js":"15","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Slider.js":"16"},{"size":685,"mtime":1618493046721,"results":"17","hashOfConfig":"18"},{"size":2859,"mtime":1618493046723,"results":"19","hashOfConfig":"18"},{"size":2148,"mtime":1618496533530,"results":"20","hashOfConfig":"18"},{"size":4887,"mtime":1618493046708,"results":"21","hashOfConfig":"18"},{"size":1579,"mtime":1625906147316,"results":"22","hashOfConfig":"18"},{"size":1488,"mtime":1618836178990,"results":"23","hashOfConfig":"18"},{"size":2002,"mtime":1618496895229,"results":"24","hashOfConfig":"18"},{"size":1896,"mtime":1618493046722,"results":"25","hashOfConfig":"18"},{"size":2161,"mtime":1618493046704,"results":"26","hashOfConfig":"18"},{"size":2401,"mtime":1618836959173,"results":"27","hashOfConfig":"18"},{"size":1462,"mtime":1618493046713,"results":"28","hashOfConfig":"18"},{"size":1241,"mtime":1618493046708,"results":"29","hashOfConfig":"18"},{"size":465,"mtime":1628651294473,"results":"30","hashOfConfig":"18"},{"size":326,"mtime":1618493046723,"results":"31","hashOfConfig":"18"},{"size":439,"mtime":1618493046709,"results":"32","hashOfConfig":"18"},{"size":4094,"mtime":1618493046713,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1hajxwf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\index.js",[],["71","72"],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\styles\\ResponsiveStyles.js",[],["73","74"],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Navbar.js",[],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Detail\\TvDetail.js",["75"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\nimport theme from \"../../styles/theme\";\r\nimport Loader from \"../Loader\";\r\nimport Season from \"./Season\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 7vh 10px 10px 10px;\r\n  height: 100%;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst BackgroundDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst BackgroundLayerDiv = styled.div.attrs({\r\n  className: \"detail-layout-div\",\r\n})`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PosterDiv = styled.div.attrs({\r\n  className: \"detail-poster-div\",\r\n})`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst ContentsDiv = styled.div.attrs({\r\n  className: \"detail-contents-div\",\r\n})`\r\n  padding: 5vh 0px 10vh 25px;\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Tittle = styled.h1`\r\n  font-size: 27px;\r\n  font-weight: 800;\r\n  line-height: 1.5em;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`;\r\nconst Genre = styled.h2`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  line-height: 2.5em;\r\n`;\r\n\r\nconst NavMenu = styled.ul`\r\n  display: flex;\r\n  font-weight: 600;\r\n  align-items: center;\r\n`;\r\nconst EachMenu = styled.li`\r\n  background-color: ${theme.ButtonColor};\r\n  padding: 7px 10px 7px 10px;\r\n  margin-right: 15px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst ContentDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TvDetail = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const params = useParams();\r\n  const id = params.id;\r\n  const match = useRouteMatch();\r\n  const { path, url } = match;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await apis.tvprograms.getDetailPrograms(id);\r\n        const {\r\n          episode_run_time,\r\n          genres,\r\n          homepage,\r\n          poster_path,\r\n          seasons,\r\n          overview,\r\n          name,\r\n          last_air_date,\r\n        } = response.data;\r\n        const fullPosterUrl = `${apis.baseUrl}${poster_path}`;\r\n        const year = new Date(last_air_date).getFullYear();\r\n        setDetailData({\r\n          genres,\r\n          homepage,\r\n          fullPosterUrl,\r\n          overview,\r\n          name,\r\n          seasons,\r\n          episode_run_time,\r\n          year,\r\n        });\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <BackgroundDiv\r\n          style={{\r\n            background: `url(${detailData.fullPosterUrl})`,\r\n            backgroundPosition: \"center center\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          <BackgroundLayerDiv>\r\n            <PosterDiv>\r\n              <img src={`${detailData.fullPosterUrl}`} alt={detailData.name} />\r\n            </PosterDiv>\r\n            <ContentsDiv>\r\n              <Tittle>{detailData.name}</Tittle>\r\n              <Genre>{`${detailData.year} • ${detailData.episode_run_time}min`}</Genre>\r\n              <Genre>\r\n                {detailData?.genres?.map((each) => {\r\n                  const name = each.name;\r\n                  return `${name} `;\r\n                })}\r\n              </Genre>\r\n              <NavMenu>\r\n                <EachMenu>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={detailData.homepage}\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    홈페이지\r\n                  </a>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={url}>\r\n                    설명\r\n                  </NavLink>\r\n                </EachMenu>\r\n                <EachMenu>\r\n                  <NavLink exact to={`${url}/seasons`}>\r\n                    시즌\r\n                  </NavLink>\r\n                </EachMenu>\r\n              </NavMenu>\r\n\r\n              <ContentDiv>\r\n                <Switch>\r\n                  <Route exact path={`${path}`}>\r\n                    <Genre>{detailData.overview}</Genre>\r\n                  </Route>\r\n                  <Route exact path={`${path}/seasons`}>\r\n                    <Season seasons={detailData.seasons} />\r\n                  </Route>\r\n                </Switch>\r\n              </ContentDiv>\r\n            </ContentsDiv>\r\n          </BackgroundLayerDiv>\r\n        </BackgroundDiv>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TvDetail;\r\n","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\apis\\api.js",[],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Detail\\Season.js",["76"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../../apis/api\";\r\n\r\nconst VideoDiv = styled.div.attrs({\r\n  className: \"grid-box-seaaon\",\r\n})`\r\n  margin: 30px 0 0 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-gap: 15px;\r\n`;\r\nconst GridContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst GridImageDiv = styled.div`\r\n  width: 100%;\r\n  height: 15vh;\r\n`;\r\n\r\nconst NameHead = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\nconst YearHead = styled.h2`\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n`;\r\n\r\nconst Season = (props) => {\r\n  const { seasons } = props;\r\n\r\n  return (\r\n    <VideoDiv>\r\n      {seasons?.map((each) => {\r\n        const { name, poster_path, air_date, episode_count } = each;\r\n        const year = new Date(air_date).getFullYear();\r\n        const fullPosterSeason = `${apis.baseUrl}${poster_path}`;\r\n        if (episode_count !== 0) {\r\n          return (\r\n            <GridContent>\r\n              <GridImageDiv\r\n                style={{\r\n                  background: `url(${fullPosterSeason})`,\r\n                  backgroundPosition: \"center center\",\r\n                  backgroundSize: \"cover\",\r\n                }}\r\n              ></GridImageDiv>\r\n              <div>\r\n                <NameHead>{name}</NameHead>\r\n                <YearHead>{year}</YearHead>\r\n              </div>\r\n            </GridContent>\r\n          );\r\n        }\r\n      })}\r\n    </VideoDiv>\r\n  );\r\n};\r\n\r\nexport default Season;\r\n","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\fragment\\TvPrograms.js",[],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\styles\\GlobalStyles.js",[],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\Context\\ApiContext.js",[],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Search.js",["77"],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\TvProgram.js",["78","79"],"import React, { useContext } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport apis from \"../apis/api\";\r\nimport { ApiContext } from \"../Context/ApiContext\";\r\nimport theme from \"../styles/theme\";\r\nimport TvPrograms from \"./fragment/TvPrograms\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 8vh 10px 10px 10px;\r\n  color: ${theme.FontColor};\r\n`;\r\n\r\nconst LoaderWrapper = styled.div.attrs({\r\n  className: \"flex-box\",\r\n})`\r\n  margin-top: 30vh;\r\n`;\r\n\r\nconst TitleText = styled.h1`\r\n  font-size: 35px;\r\n  font-weight: 800;\r\n  margin-bottom: 3vh;\r\n  margin-top: 3vh;\r\n`;\r\n\r\nconst TvProgram = (props) => {\r\n  const apiContext = useContext(ApiContext);\r\n  const { onAirTv, popTv, topTv, isLoading } = apiContext;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Helmet>\r\n        <title>TV programs - Ratflix</title>\r\n      </Helmet>\r\n      {isLoading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <TitleText>{`${theme.nowContents}`}</TitleText>\r\n          <TvPrograms tvData={onAirTv} />\r\n\r\n          <TitleText>{`${theme.popContents}`}</TitleText>\r\n          <TvPrograms tvData={popTv} />\r\n\r\n          <TitleText>{`${theme.topContents}`}</TitleText>\r\n          <TvPrograms tvData={topTv} />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TvProgram;\r\n","C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Home.js",[],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\MetaSctipt.js",[],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\styles\\theme.js",[],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Loader.js",[],"C:\\Users\\user\\desktop\\nomad\\ratflix\\src\\components\\Slider.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":121,"column":6,"nodeType":"88","endLine":121,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":38,"column":28,"nodeType":"92","messageId":"93","endLine":38,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"99","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":12},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["102"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'apis' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [id]",{"range":"105","text":"106"},[2760,2762],"[id]"]